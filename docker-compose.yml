version: '3'
services:
    php:
        container_name: php${APP_CONTAINER_NAME}
        build:
            context: .
            dockerfile: development.Dockerfile
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
            - ../kanvas-core:/var/www/kanvas-core
            - ./docker/docker-php-ext-opcache.ini:/usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
            - ./docker/php.ini:/usr/local/etc/php/conf.d/xz-custom.ini
        networks:
            - sail
        depends_on:
            - mysql
            - redis
    nginx:
        image: nginx:latest
        container_name: nginx${APP_CONTAINER_NAME}
        ports:
            - "80:80"
        links:
            - php
        volumes:
            - '.:/var/www/html'
            - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - sail
        depends_on:
            - php
        healthcheck:
            test: ["CMD", "service", "nginx", "status"]
            retries: 3
            timeout: 5s
    mysql:
        container_name: mysql${APP_CONTAINER_NAME}
        image: 'mysql:8.3.0'
        command: --innodb_strict_mode=0 --innodb_log_file_size=512M
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
        networks:
            - sail
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
            retries: 3
            timeout: 5s
    redis:
        container_name: redis${APP_CONTAINER_NAME}
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s

    rabbitmq:
        container_name: rabbitmq${APP_CONTAINER_NAME}
        image: rabbitmq:3.9.21-management-alpine
        hostname: "rabbit"
        labels:
            NAME: "rabbitmq1"
        volumes:
            - "sail-rabbitmq:/var/lib/rabbitmq"
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 30s
            timeout: 30s
            retries: 3
        ports:
            - "15672:15672"
            - "5672:5672"
        networks:
            - sail
    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
    phpmyadmin:
        image: phpmyadmin/phpmyadmin:5.0.2
        container_name: phpmyadmin${APP_CONTAINER_NAME}
        restart: always
        environment:
            - PMA_HOST=mysql
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        ports:
          - "9010:80"

        volumes:
          - pma:/var/www/html

        networks:
          - sail
    minio1:
      image: minio/minio
      container_name: minio${APP_CONTAINER_NAME}
      restart: always
      environment:
        MINIO_ACCESS_KEY: minio
        MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}
      command: server /data --console-address ":9001"
      ports:
        - "9002:9000"
        - "9001:9001"
      volumes:
        - s3data:/data
      networks:
        - sail
    meilisearch:
        container_name: meilisearch
        image: getmeili/meilisearch:v1.1
        environment:
          - http_proxy
          - https_proxy
          - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-masterKey}
          - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
          - MEILI_ENV=${MEILI_ENV:-development}
          - MEILI_LOG_LEVEL
          - MEILI_DB_PATH=${MEILI_DB_PATH:-/data.ms}
        ports:
          - ${MEILI_PORT:-7700}:7700
        networks:
          - sail
        volumes:
          - meilisearch:/data.ms
        restart: unless-stopped
networks:
    sail:
        driver: bridge
volumes:
    pma:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-rabbitmq:
        driver: local
    s3data:
    meilisearch:
