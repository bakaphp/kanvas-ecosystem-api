name: Deploy to ECS

on:
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    permissions:
      contents: read
      packages: write

    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip awscliv2.zip && sudo ./aws/install --update

      - name: AWS ECR
        uses: kciter/aws-ecr-action@v5
        with:
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_CICD }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CICD }}
          account_id: 617498580299
          repo: ${{ secrets.INSTANCE_NAME }}
          region: ${{ secrets.AWS_REGION }}
          create_repo: true
          tags: latest,${{ github.run_number }},
          dockerfile: ${{ github.ref_name }}.Dockerfile
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          IMAGE_TAG=latest
          REPOSITORY_URI=${{ secrets.ECR_REPOSITORY }}

          docker build -t $REPOSITORY_URI:$IMAGE_TAG .
          docker push $REPOSITORY_URI:$IMAGE_TAG

      # Deploy to ECS
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          service: <SERVICE_NAME>
          cluster: <CLUSTER_NAME>
          wait-for-service-stability: true