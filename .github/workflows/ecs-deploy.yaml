name: Deploy to ECS

on:
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    permissions:
      id-token: write
      contents: read

    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ECS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
  # deploy:
  #   runs-on: ubuntu-latest

  #   steps:
  #     # Checkout code
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     # Log in to ECR
  #     - name: Log in to Amazon ECR
  #       uses: aws-actions/amazon-ecr-login@v1

  #     # Build and push Docker image
  #     - name: Build and push Docker image
  #       run: |
  #         IMAGE_TAG=latest
  #         REPOSITORY_URI=${{ secrets.ECR_REPOSITORY }}

  #         docker build -t $REPOSITORY_URI:$IMAGE_TAG .
  #         docker push $REPOSITORY_URI:$IMAGE_TAG

  #     # Deploy to ECS
  #     - name: Deploy to Amazon ECS
  #       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
  #       with:
  #         task-definition: ecs-task-def.json
  #         service: <SERVICE_NAME>
  #         cluster: <CLUSTER_NAME>
  #         wait-for-service-stability: true