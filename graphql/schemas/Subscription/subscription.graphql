input SubscriptionInput {
    user_id: Int!
    company_id: Int!
    app_id: Int!
    plan_id: Int!
    name: String!
    stripe_id: String!
}

input SubscriptionUpdateInput {
    user_id: Int
    company_id: Int
    app_id: Int
    plan_id: Int
    name: String
    stripe_id: String
}

type Subscription {
    id: ID!
    user_id: Int!
    company_id: Int!
    app_id: Int!
    plan_id: Int!
    name: String!
    stripe_id: String!
    is_active: Boolean
    is_cancelled: Boolean
    paid: Boolean
    charge_date: String
    created_at: String
    updated_at: String
}

extend type Mutation @guard {
    createSubscription(input: SubscriptionInput!): Subscription!
        @field(
            resolver: "App\\GraphQL\\Subscriptions\\Mutations\\Subscriptions\\SubscriptionMutation@create"
        )
    updateSubscription(id: ID!, input: SubscriptionUpdateInput!): Subscription!
        @field(
            resolver: "App\\GraphQL\\Subscriptions\\Mutations\\Subscriptions\\SubscriptionMutation@update"
        )
    cancelSubscription(id: ID!): Subscription!
        @field(
            resolver: "App\\GraphQL\\Subscriptions\\Mutations\\Subscriptions\\SubscriptionMutation@cancel"
        )
}