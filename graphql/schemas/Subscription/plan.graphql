type Plan {
    id: ID!
    name: String!
    description: String
    prices: [Price!] @hasMany(relation: "price")
    is_default: Boolean
    created_at: String
    updated_at: String
}

input PlanInput {
    name: String!
    description: String
    prices: [PriceInput!]!
    is_default: Boolean
}

input PlanUpdateInput {
    name: String
    description: String
    prices: [PriceInput!]
}

extend type Mutation @guard {
    createPlan(input: PlanInput!): Plan!
        @field(
            resolver: "App\\GraphQL\\Subscriptions\\Mutations\\Plans\\PlanMutation@create"
        )
    updatePlan(id: ID!, input: PlanUpdateInput!): Plan!
        @field(
            resolver: "App\\GraphQL\\Subscriptions\\Mutations\\Plans\\PlanMutation@update"
        )
    deletePlan(id: ID!): Boolean!
        @field(
            resolver: "App\\GraphQL\\Subscriptions\\Mutations\\Plans\\PlanMutation@delete"
        )
}