type CompanySubscription {
    id: ID!
    name: String
    payment_method_id: String!
    trial_days: Int
    items: [SubscriptionItem!] @hasMany(relation: "subscriptionItem")
    is_active: Boolean
    is_cancelled: Boolean
    paid: Boolean
    charge_date: String
    created_at: String
    updated_at: String
}

input SubscriptionInput {
    items: [SubscriptionItemInput!]! 
    name: String
    payment_method_id: String!
    trial_days: Int
}

input SubscriptionUpdateInput {
    items: [SubscriptionItemInput!]
    name: String
    payment_method_id: String
    trial_days: Int
}

extend type Mutation @guard {
    createSubscription(input: SubscriptionInput!): CompanySubscription! 
    @field(resolver: "App\\GraphQL\\Subscription\\Mutations\\Subscriptions\\SubscriptionMutation@create")
    
    updateSubscription(input: SubscriptionUpdateInput!): CompanySubscription!
        @field(
            resolver: "App\\GraphQL\\Subscription\\Mutations\\Subscriptions\\SubscriptionMutation@update"
        )
    cancelSubscription(id: ID!): CompanySubscription!
        @field(
            resolver: "App\\GraphQL\\Subscription\\Mutations\\Subscriptions\\SubscriptionMutation@cancel"
        )
}