type Cart {
    id: ID!
    items: [CartItem!]!
    discounts: [CartDiscount!]!
    total_discount: Money!
    total: Money!
}

type CartDiscount {
    code: String!
    amount: String!
    total: Money
}

type CartItem {
    id: ID!
    name: String!
    variant: Variant!
    price: Money!
    quantity: Int!
    attributes: Mixed
}

input CartItemInput {
    quantity: Int!
    variant_id: ID!
    channel_id: ID
    attributes: Mixed
}

extend type Mutation @guardByKanvasIdentifier {
    addToCart(items: [CartItemInput!]!): [CartItem!]!
        @field(
            resolver: "App\\GraphQL\\Souk\\Mutations\\Cart\\CartManagementMutation@add"
        )
    updateCart(variant_id: ID!, quantity: Int!): [CartItem!]!
        @field(
            resolver: "App\\GraphQL\\Souk\\Mutations\\Cart\\CartManagementMutation@update"
        )
    removeFromCart(variant_id: ID!): [CartItem!]!
        @field(
            resolver: "App\\GraphQL\\Souk\\Mutations\\Cart\\CartManagementMutation@remove"
        )
    cartDiscountCodesUpdate(discountCodes: [String!]!): Cart!
        @field(
            resolver: "App\\GraphQL\\Souk\\Mutations\\Cart\\CartManagementMutation@discountCodesUpdate"
        )
    clearCart: Boolean!
        @field(
            resolver: "App\\GraphQL\\Souk\\Mutations\\Cart\\CartManagementMutation@clear"
        )
}

extend type Query @guardByKanvasIdentifier {
    cart: Cart
        @field(resolver: "App\\GraphQL\\Souk\\Queries\\Cart\\CartQuery@index")
}
