type Variant {
    id: Int
    uuid: String!
    slug: String!
    products_id: Int!
    name: String!
    description: String
    short_description: String
    html_description: String
    sku: String
    ean: String
    files: [Filesystem]
        @paginate(
            defaultCount: 10
            builder: "App\\GraphQL\\Ecosystem\\Queries\\Filesystem\\FileRelationship@entityPagination"
        )
    interactions(visitor: VisitorEntityInput!): Interactions
        @method(name: "getEntitySocialInteractions")
    product: Product
    warehouses: [WarehouseVariantRelationship]
    attributes: [VariantsAttributes]
    channels: [VariantChannelRelationship]
}
type WarehouseVariantRelationship {
    id: Int!
    uuid: String!
    quantity: Float
    price: Float
    sku: String
    position: Int
    serial_number: String
    is_oversellable: Boolean
    is_variant_default: Boolean
    is_best_seller: Boolean
    is_on_sale: Boolean
    is_on_promo: Boolean
    can_pre_order: Boolean
    is_coming_soon: Boolean
    is_new: Boolean
    is_variant_published: Boolean
}
type VariantsAttributes {
    name: String!
    value: Mixed
}
type VariantChannelRelationship {
    warehouses_id: Int
    price: Float
    discounted_price: Float
    is_published: Boolean
}
input VariantsWarehousesInput {
    quantity: Float!
    price: Float!
    sku: String
    position: Int!
    serial_number: String
    is_oversellable: Boolean
    is_default: Boolean
    is_best_seller: Boolean
    is_on_sale: Boolean
    is_on_promo: Boolean
    can_pre_order: Boolean
    is_coming_soon: Boolean
    is_new: Boolean
    is_published: Boolean
}
input VariantsAttributesInput {
    name: String!
    value: Mixed!
}
input VariantsInput {
    products_id: Int
    name: String!
    description: String
    short_description: String
    html_description: String
    sku: String
    ean: String
    barcode: String
    serial_number: String
    is_published: Boolean
    files: [FilesystemInputUrl]
    slug: String
    discountPrice: Float
    price: Float
    source_id: Mixed
    attributes: [VariantsAttributesInput]
}
input VariantsUpdateInput {
    products_id: Int
    name: String
    description: String
    short_description: String
    html_description: String
    files: [FilesystemInputUrl]
    sku: String
    ean: String
    barcode: String
    serial_number: String
    is_published: Boolean
}
input VariantChannelInput {
    price: Float!
    discounted_price: Float!
    is_published: Boolean!
}
extend type Mutation @guard {
    createVariant(input: VariantsInput!): Variant
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\Variants\\Variants@create"
        )
    updateVariant(input: VariantsUpdateInput!, id: Int!): Variant
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\Variants\\Variants@update"
        )
    deleteVariant(id: Int!): Boolean
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\Variants\\Variants@delete"
        )
    addVariantToWarehouse(
        id: Int!
        warehouse_id: Int!
        input: VariantsWarehousesInput!
    ): Variant
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\Variants\\Variants@addToWarehouse"
        )
    removeVariantToWarehouse(id: Int!, warehouse_id: Int!): Variant
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\Variants\\Variants@removeToWarehouse"
        )
    addAttributeToVariant(
        id: Int!
        attributes_id: Int!
        input: VariantsAttributesInput!
    ): Variant
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\Variants\\Variants@addAttribute"
        )
    removeAttributeToVariant(id: Int!, attributes_id: Int!): Variant
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\Variants\\Variants@removeAttribute"
        )
    addVariantToChannel(
        id: Int!
        channels_id: Int!
        warehouses_id: Int!
        input: VariantChannelInput!
    ): Variant
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\Variants\\Variants@addToChannel"
        )
    removeVariantChannel(id: Int!, channels_id: Int!): Variant
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\Variants\\Variants@removeChannel"
        )
}

extend type Query @guard {
    variants(
        where: _
            @whereConditions(
                columns: [
                    "id"
                    "products_id"
                    "name"
                    "slug"
                    "uuid"
                    "sku"
                    "serial_number"
                    "is_published"
                ]
            )
    ): [Variant]
        @paginate(
            defaultCount: 25
            scopes: ["fromApp", "fromCompany"]
            model: "Kanvas\\Inventory\\Variants\\Models\\Variants"
        )

    warehouseVariants(
        warehouseId: Int!
        search: String @search
        where: _ @whereConditions(columns: ["quantity", "price", "sku"])
    ): [Variant!]
        @paginate(
            defaultCount: 25
            builder: "App\\GraphQL\\Inventory\\Builders\\Variants\\Variants@allVariantsInWarehouse"
        )
}

extend type Query {
    channelVariants(
        id: String!
        search: String @search
        visitor: VisitorEntityInput
        where: _ @whereConditions(columns: ["slug", "uuid", "name"])
    ): [Variant!]
        @paginate(
            defaultCount: 25
            builder: "App\\GraphQL\\Inventory\\Builders\\Variants\\Variants@allVariantsPublishedInChannel"
        )
}
