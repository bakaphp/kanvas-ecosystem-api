type ProductType {
    id: ID!
    companies_id: Int!
    uuid: String!
    name: String!
    description: String
    slug: String!
    description: String
    weight: Int
    companies: Company!
    is_published: Boolean
    total_products: Int! @method(name: "getTotalProducts")
    products_attributes: [Attributes!]! @method(name: "getProductsAttributes")
    variants_attributes: [Attributes!]! @method(name: "getVariantsAttributes")
}

input ProductTypeInput {
    name: String!
    companies_id: ID
    description: String
    weight: Int!
    products_attributes: [ProductTypeAttributesInput!]
    variants_attributes: [ProductTypeAttributesInput!]
    is_published: Boolean
}

input ProductTypeUpdateInput {
    name: String!
    description: String
    weight: Int
    is_published: Boolean
    products_attributes: [ProductTypeAttributesInput!]
    variants_attributes: [ProductTypeAttributesInput!]
}

input ProductTypeAttributesInput {
    id: ID!
    name: String
}

input ProductTypeAttributesAssignInput {
    products_attributes: [ProductTypeAttributesInput!]
    variants_attributes: [ProductTypeAttributesInput!]
}

extend type Mutation @guard {
    createProductType(input: ProductTypeInput!): ProductType!
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\ProductsTypes\\ProductsTypes@create"
        )
    updateProductType(id: ID!, input: ProductTypeUpdateInput!): ProductType!
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\ProductsTypes\\ProductsTypes@update"
        )
    deleteProductType(id: ID!): Boolean!
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\ProductsTypes\\ProductsTypes@delete"
        )
    assignProductTypeAttribute(id: ID!, input: ProductTypeAttributesAssignInput): ProductType!
        @field(
            resolver: "App\\GraphQL\\Inventory\\Mutations\\ProductsTypes\\ProductsTypes@assignAttributes"
        )
}
extend type Query {
    productTypes(
        search: String @search
        where: _
            @whereConditions(
                columns: [
                    "id"
                    "name"
                    "slug"
                    "companies_id"
                    "uuid"
                    "description"
                    "is_published"
                    "weight"
                ]
            )
        orderBy: _
            @orderBy(
                columns: [
                    "id"
                    "created_at"
                    "name"
                    "weight"
                    "is_published"
                ]
            )
    ): [ProductType!]!
        @paginate(
            model: "Kanvas\\Inventory\\ProductsTypes\\Models\\ProductsTypes"
            defaultCount: 25
            scopes: ["fromApp", "fromCompany"]
        )
}
