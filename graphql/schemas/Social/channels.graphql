extend type User {
    pivot: SocialChannelPivot
}

type SocialChannel {
    id: ID!
    name: String!
    uuid: String
    slug: String
    description: String!
    entity_namespace: String!
    entity_id: ID!
    last_message_id: ID
    messages: [Message!]! @belongsToMany
    users: [User!]! @belongsToMany
    systemModule: SystemModule!
}

input SocialChannelInput {
    name: String!
    slug: String
    description: String!
    entity_namespace_uuid: String!
    entity_id: ID!
}

enum UsersRolesChannel {
    Admin @enum(value: 1)
    User @enum(value: 2)
}

type SocialChannelPivot {
    roles_id: UsersRolesChannel!
}

input AttachUserInput {
    channel_id: ID!
    user_id: ID!
    roles_id: UsersRolesChannel!
}

extend type Query {
    socialChannels(
        where: _
            @whereConditions(
                columns: [
                    "id"
                    "name"
                    "slug"
                    "description"
                    "entity_namespace"
                    "entity_id"
                ]
            )
    ): [SocialChannel!]!
        @paginate(
            defaultCount: 25
            builder: "App\\GraphQL\\Social\\Builders\\Channels\\GetSocialChannelsBuilder@getChannels"
            scopes: ["fromApp"]
        )
}

extend type Mutation {
    createSocialChannel(input: SocialChannelInput!): SocialChannel
        @field(
            resolver: "App\\GraphQL\\Social\\Mutations\\Channels\\ChannelsManagementMutation@createChannel"
        )
    updateSocialChannel(id: ID!, input: SocialChannelInput!): SocialChannel
        @field(
            resolver: "App\\GraphQL\\Social\\Mutations\\Channels\\ChannelsManagementMutation@updateChannel"
        )
    deleteSocialChannel(id: ID!): SocialChannel
        @field(
            resolver: "App\\GraphQL\\Social\\Mutations\\Channels\\ChannelsManagementMutation@deleteChannel"
        )
    attachUserToSocialChannel(input: AttachUserInput!): SocialChannel
        @field(
            resolver: "App\\GraphQL\\Social\\Mutations\\Channels\\ChannelsManagementMutation@attachUserToChannel"
        )
    detachUserToSocialChannel(channel_id: ID!, user_id: ID!): SocialChannel
        @field(
            resolver: "App\\GraphQL\\Social\\Mutations\\Channels\\ChannelsManagementMutation@detachUserToChannel"
        )
}
