type Invite {
    id: Int!
    invite_hash: String!
    users_id: Int!
    companies_id: Int!
    companies_branches_id: Int!
    role_id: Int!
    apps_id: Int!
    email: String!
    firstname: String
    lastname: String
    description: String
}

type ExternalInvite {
    invite_hash: String!
    users_id: Int!
    companies_id: Int!
    companies_branches_id: Int!
    role_id: Int!
    apps_id: Int!
    email: String!
    firstname: String
    lastname: String
    description: String
}

input InviteInput {
    role_id: Int!
    companies_branches_id: Int!
    email: String!
    firstname: String
    lastname: String
    description: String
}

input CompleteInviteInput {
    invite_hash: String!
    password: String!
    firstname: String!
    lastname: String!
}

extend type Mutation @guard {
    inviteUser(input: InviteInput!): Invite!
        @field(
            resolver: "App\\GraphQL\\Ecosystem\\Mutations\\Users\\UserManagementMutation@insertInvite"
        )
    deleteInvite(id: Int!): Boolean!
        @field(
            resolver: "App\\GraphQL\\Ecosystem\\Mutations\\Users\\UserManagementMutation@deleteInvite"
        )
}

extend type Mutation {
    getInvite(hash: String!): ExternalInvite!
        @field(
            resolver: "App\\GraphQL\\Ecosystem\\Mutations\\Users\\UserManagementMutation@getInvite"
        )
    processInvite(input: CompleteInviteInput!): User!
        @field(
            resolver: "App\\GraphQL\\Ecosystem\\Mutations\\Users\\UserManagementMutation@process"
        )
}
extend type Query @guard {
    usersInvites(
        where: _
            @whereConditions(
                columns: [
                    "id"
                    "users_id"
                    "companies_id"
                    "companies_branches_id"
                    "role_id"
                    "apps_id"
                    "email"
                    "firstname"
                    "lastname"
                    "description"
                ]
            )
        orderBy: _ @orderBy(columns: ["id"], direction: "DESC")
    ): [Invite]
        @paginate(
            model: "Kanvas\\Users\\Models\\UsersInvite"
            scopes: ["fromCompany"]
        )
}
