type ImporterTemplate {
    id: ID!
    apps: App
    users: User!
    company: Company!
    name: String!
    description: String
    attributes: [AttributeImporterTemplate!]
}

type AttributeImporterTemplate {
    id: ID!
    parent_id: ID
    name: String!
    mapping_field: String!
    importersTemplates: [ImporterTemplate!]! @belongsTo
    parent: AttributeImporterTemplate
    children: [AttributeImporterTemplate!]
}

input ImporterTemplateInput {
    name: String!
    description: String
    attributes: [AttributeImporterTemplateInput!]
}

input AttributeImporterTemplateInput {
    name: String
    mapping_field: String
    children: [AttributeImporterTemplateInput!]
}

extend type Mutation @guard {
    createMapperImporterTemplate(input: ImporterTemplateInput!): ImporterTemplate!
        @field(
            resolver: "App\\GraphQL\\Ecosystem\\Mutations\\ImporterTemplate\\ImporterTemplateManagementMutation@create"
        )
}

extend type Query @guard {
    mapperImportersTemplates(
        where: _ @whereConditions(columns: ["id", "name", "description"])
        hasAttributes: _ @whereHasConditions(columns: ["id", "parent_id", "name", "value"])
    ): [ImporterTemplate!]
        @paginate(
            model: "Kanvas\\MappersImportersTemplates\\Models\\MapperImporterTemplate"
            defaultCount: 25
            scopes: ["fromApp", "fromCompany"]
        )
}
